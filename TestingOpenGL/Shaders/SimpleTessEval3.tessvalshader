#version 430

layout(quads, fractional_odd_spacing, cw) in;

out vec3 fragmentPosition;
out vec3 fragmentNormal;

uniform sampler2D heightNormalMap;

uniform mat4 V;
uniform mat4 P;
uniform mat4 Model;

uniform float blockSize;

void main(){
    // Get coordinates of new points in domain space
    float u = gl_TessCoord.x;
    float v = gl_TessCoord.y;
    // Converts new points into model space
    vec4 a = mix(gl_in[1].gl_Position, gl_in[0].gl_Position, u);
    vec4 b = mix(gl_in[2].gl_Position, gl_in[3].gl_Position, u);
    vec4 position = mix(a, b, v);
    // Calculates the texture coordinates and gets the height from the height map
    vec2 texcoord = vec2(abs(position.x) / blockSize, abs(position.z) / blockSize);
    float height = texture(heightNormalMap, texcoord).a;
    // Sets the position of each new point
    fragmentPosition = vec3(position.x, height, position.z);
    // Gets the normal from the height map
    fragmentNormal = normalize(texture(heightNormalMap, texcoord).rgb);
    // Sets the position in MVP
    gl_Position = P * V * Model * vec4(fragmentPosition, 1.0);
}